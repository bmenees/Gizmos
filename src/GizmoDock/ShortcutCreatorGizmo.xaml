<g:Gizmo x:Class="Menees.Gizmos.ShortcutCreatorGizmo"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:g="http://menees.com/gizmos"
	xmlns:m="http://menees.com/xaml"
	mc:Ignorable="d" 
	Width="640" Height="400"
	x:ClassModifier="internal">
	<Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
		Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
		BorderThickness="2" CornerRadius="8">
		<Border.Resources>
			<m:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
		</Border.Resources>
		<DockPanel>
			<Border DockPanel.Dock="Top">
				<Grid Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
					  Height="{DynamicResource {x:Static SystemParameters.WindowCaptionHeightKey}}"
					  MouseLeftButtonDown="TitleBarMouseLeftButtonDown">
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Button Grid.Column="1" Content="r" FontFamily="Marlett" VerticalAlignment="Center" HorizontalAlignment="Center"
							Margin="4,2" FontSize="13" IsCancel="True" Click="CloseClick" Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
					<TextBlock Grid.ColumnSpan="2" Text="Gizmo Shortcut Creator" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" />
				</Grid>
			</Border>
			<Separator DockPanel.Dock="Top" Margin="0"/>
			<DockPanel Margin="12">
				<DockPanel.Resources>
					<Style TargetType="Label">
						<Setter Property="Padding" Value="0"/>
					</Style>
					<Style TargetType="TextBox">
						<Setter Property="MinHeight" Value="22" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>
				</DockPanel.Resources>
				
				<TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="0,0,0,12">This wizard will help you create a Windows shortcut to run a single gizmo.</TextBlock>

				<Label Content="Select a _library of custom gizmos:" DockPanel.Dock="Top" Target="{Binding ElementName=assembly, Mode=OneWay}"/>
				<Grid DockPanel.Dock="Top" Margin="0,2,0,12">
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<TextBox x:Name="assembly" IsReadOnly="True" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TabIndex="0" IsReadOnlyCaretVisible="True" />
					<Button Grid.Column="1" Content="_..." Margin="8,0,0,0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Click="SelectAssemblyClick" TabIndex="1" />
				</Grid>
				
				<Label Content="Select a single _gizmo:" DockPanel.Dock="Top" Target="{Binding ElementName=gizmos, Mode=OneWay}"/>

				<StackPanel DockPanel.Dock="Bottom" Margin="0,12,0,0" DataContext="{Binding SelectedItem, ElementName=gizmos}" IsEnabled="{Binding IsEnabled, ElementName=gizmos}">
					<Label Content="Assign a unique _name if multiple instances of the gizmo will be used:" Target="{Binding ElementName=instance, Mode=OneWay}"
						   IsEnabled="{Binding IsSingleInstance, Converter={StaticResource InverseBooleanConverter}}"/>
					<Grid Margin="0,2,0,12">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<TextBox x:Name="instance" TabIndex="3" IsEnabled="{Binding IsSingleInstance, Converter={StaticResource InverseBooleanConverter}}" />
						<Button Grid.Column="1" Content="3" FontFamily="Marlett" Margin="8,0,0,0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
								Click="GenerateInstanceNameClick" TabIndex="4" ToolTip="Generates a new instance name."
								IsEnabled="{Binding IsSingleInstance, Converter={StaticResource InverseBooleanConverter}}"/>
					</Grid>
					<CheckBox x:Name="showInTaskbar" Content="S_how gizmo in taskbar" Margin="0,0,0,12" HorizontalAlignment="Left" TabIndex="5"/>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<StackPanel.Resources>
							<Style TargetType="Button">
								<Setter Property="Margin" Value="8,0,0,0"/>
								<Setter Property="Padding" Value="12,3"/>
							</Style>
						</StackPanel.Resources>
						<Button Content="_Run" Margin="0" ToolTip="Runs the selected gizmo." Click="RunClick" TabIndex="6" />
						<Button Content="_Copy" ToolTip="Copies all of the shortcut info to the clipboard." Click="CopyClick" TabIndex="7" />
						<Button Content="Create _Shortcut..." IsDefault="True" Click="CreateShortcutClick" TabIndex="8" />
					</StackPanel>
				</StackPanel>

				<!-- The {Binding} syntax means we bind to the entire DataContext, which is an IList<GizmoType> ambiently pulled from the UserControl. -->
				<ListBox x:Name="gizmos" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" TabIndex="2"
						 ItemsSource="{Binding}">
					<!-- http://stackoverflow.com/questions/484293/wpf-listview-with-icons-view -->
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding GizmoName}" MinWidth="100"/>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</DockPanel>
		</DockPanel>
	</Border>
</g:Gizmo>
